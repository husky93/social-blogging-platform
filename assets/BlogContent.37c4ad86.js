import{R as _,_ as p,a1 as v,h as l,a2 as E,a3 as R,a4 as b,a5 as g,B as I,e as d,F as x,j as s,p as L}from"./index.f31e121f.js";const u=_.lazy(()=>p(()=>import("./PostCard.fb155ba3.js"),["assets/PostCard.fb155ba3.js","assets/index.f31e121f.js","assets/index.0fc7d390.css","assets/Skeleton.9f4d571b.js","assets/Card.48e3310e.js"])),n=_.lazy(()=>p(()=>import("./Skeleton.9f4d571b.js"),["assets/Skeleton.9f4d571b.js","assets/Card.48e3310e.js","assets/index.f31e121f.js","assets/index.0fc7d390.css"])),C=({})=>{const{posts:o,hasMore:i,loading:r,loadItems:f,lastVisible:m}=v(),a=l.exports.useRef(),h=l.exports.useCallback(t=>{r||(a.current&&a.current.disconnect(),a.current=new IntersectionObserver(e=>{if(e[0].isIntersecting&&e[0].time>3e3&&i){const c=E(I(L,"posts"),g("likesCount","desc"),b(m),R(5));f(c)}}),t&&a.current.observe(t))},[r,i]);return d(x,{children:[o.map((t,e)=>o.length===e+1?s("div",{ref:h,children:s(u,{post:t},`post-${e}`)},`post-${e}-ref`):s(u,{post:t},`post-${e}`)),r&&d("div",{children:[s(n,{}),s(n,{}),s(n,{})]})]})};export{C as default};
